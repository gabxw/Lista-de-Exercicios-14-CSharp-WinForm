<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAYCgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAnSSURBVHja7d1bbJR1Hofxt1IQAghpt7QKbaSK2Ja9gNYrFS/2kOBaDiUKIh4gwawS
        FXBBDhcmmqCiSIyJxpio8YLIJnij4gpZEom6V2q8IMEDojQaoyYaT1EQ/zu/2XRD2BXbztvOTPk8yZMq
        khbGfp9535m3M1kGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAMAZx1+WLcsWr1qVXXLFFVldQ4MbBCgjscFL5s7NlqxcmXUvXTp0X2j5
        zTcXP3Zedlnx4x8WLKhraGqamtXUTCv8K8nhtrC92OAfC1uMTc6+9NLiNpetXj00ETj/4ouzufPm1be0
        tq6rb2z819hx444WfrmXZHmMDdZPmfJGYZNrLytss/mCC/Ifftfll2fts2dHYZoKxdk1evToE4VfTiQr
        w9hkw7nn/r1whN7UMWdO1lU4LciNK+bNy9bee2/teS0tO0bV1rrByQo0tlnY6PZ1DzxQO/fKK3M89J8x
        I/t9V1fHuPHje93QZOUaGy1stT02m18ALroom9XVtXL0mDHH3chkBZ8KjBlzbFZn54rYbG5Mmz49u7Cj
        42+FT+5GJis7AGlGR8edsdncmHr++dkFbW3rBYCs/ADEVmOzAkAKgACQAiAApAAMdQDOOuus1NHZmf7c
        05P+tHAhyRKNLcWmYlsVH4Da0aPTuq1b0z8OHUp7Dh4kWaKxpdhUbKsqArBh27b0zw8/THvff59kicaW
        YlNVE4D1EYDDh9Pe994jWaKxpfUCQAqAAJACIACkAAgAKQACQAqAAJACIACkAAgAKQACQAqAAJACIACk
        AAgAKQACQAqAAJACIACkAAgAKQAlvSLQgw+m/UeOpH0ffECyRGNLsamqCcBft2xJz73+etp54ADJEo0t
        xaaqIgBZTU2aOGlSamhqSr8jWbKxpdhUbMv7ApAsSwC8OSh5pgbgwvb2DQJAVn4ACltdPy3PADRPn57N
        6OjYPObss93IZAUbGy1sdVNza2t+AZj2nyOALWMcAZCVHYA4Amhr25LrEUBDU1M2taVlY3+ehiBZPmOj
        sdWGxsb8AjBhwoRs8uTJ6/vz5oQky2dsNLYam801AJMmTRIAsgoCEFsVAFIAhj8ANTU1qem889LM9vY0
        s62NZKkWthSbqunHlYBlD0D8njmdnWlRT09auGgRyRKNLcWm+ru/8gdgzpy0cOHCtGDBApIlGluKTQkA
        KQACQAqAAJACIACkAAgAKQACQAqAAJACIACkAAgAKQACQAqAAJACIACkAFRtALq7u4teddVVxY/z58/3
        zUIBGOkBiKEvXrw43XbbbWnbtm1p+/btad26denqq68WAQrASA5ADHzVqlXpxRdfTF9++WX66aef0rFj
        x9JXX32V9u3bl2655RYRoACMxAD0jf+tt95Kv8bBgwfTmjVriqcEvnEoACMoAHHY/9JLL6Xf4tChQyJA
        ARhJAYgx33HHHcXD/v4gAhSAERSAeKQ/HuyL8/3+IgIUgBEUgEceeSQdP348DYSIwNq1a0WAAlDtpwAb
        N25M33zzTRoo7777rghQAKo5APEMwJIlS9Jrr72WBoMIUABGwNOAMeIjR46IAAXgTL0QaNOmTenjjz8e
        dATiqkERoABU8aXAmzdvFgEKwJn6w0B5RCCeInTZMAWgSn8asNQIvPPOO2nlypUiQAGo1tcDiMP4wT4m
        8Msvv6Snn37aNxgFoJpfEKTvgcGPPvpowBF4++2307XXXusogAJQza8IFFcK3n///emHH34YUACOHj2a
        brzxRgGgAFRrAOI04KabbkqvvvpqOnHixIAfDFy+fLkAUACq9TGAGP+BAweK5/QDJX68uKenxzcZBaAa
        XxOwlPF/8cUX6a677nI9AAWg2gJw8vgHw7fffpseffTRfv8Z4xRhqPWNTgEYhnv+GP/jjz9ePPT/reHF
        f4+/x3XXXZdWrFhRvG4gb+PvsnTpUiGgAPTnnng4x7969eq0e/fu4usKfPbZZ8VXJMrbTz75JL355pvp
        iSee8IAkBeB0g7zhhhuKj/YPdvyPPfZYv8e/YcOGdPjw4TRc/Pzzz2n//v3p+uuvFwEKwKnGcOPeuJTx
        L1q0qF/jj3viuEhouIm/27PPPutdlSgAp573x+H4559/PqTj7/taW7duTT/++GMqB/F6B3Ga4yiAAnDS
        KONKv3gjkKEcf9/X2rlzZyoX8Wf29CQF4JRLfR966KEBvSrwYMbfdwrw/PPPly0A33//fbr77rsFgAJw
        8r1y3Cv290VBBzv+vtg89dRTZQvA119/7eXMKQCn3isvW7bstG8Llsf4+2ITzwDEEMuBn1CkAPxKBO65
        557TDjOOEEoZf5/xNmQvvPBCWc7/77vvPuOnAPw/Y9g7duxIn3766f88fdbb25sefvjhksffF5v4MeGX
        X345fffdd8My/rjQqO86Bd/0FIDTePvtt6dnnnkmvfLKK2nPnj3pySefTLfeemvuRxzXXHNN8QG5Xbt2
        pb179xYv1MnbiEw85hDvfej5fwpAP8/Tw7i3D+Ofh+KwOT5n3+eOe+Y4Ncjbvj+/B/0oACQFgKQAkBQA
        UgAEgBQAASAFQABIARAAUgAEgBQAASAFQABIARAAUgAEgBQAASAFQABIARAAUgAEgBQAASAFQABIARAA
        UgAEgBQAASAFQABIARAAUgAEgBQAASAFQABIARAAUgAEgBQAASAFwP88UgBICgBJASApACQFgKQAkBQA
        kgJAUgBICgApAAJACoAAkAIgAKQACAApAAJACoAAkAIgAKQACAApAAJACoAAkAIgAKQACAApAAJACoAA
        kAIgAKQA5BCA2bNnp/nz56fu7m6SJRpbik1VRQBqampSXV1damlpSc3NzSRLNLYUm4ptVXwASJZPASAF
        QABIARAAUgDyCMDkyZPvFACy8gMQW801AOecc05WX1+/ovDJj7mRyYoOwLHYamw27wC019bWHnUjk5Vr
        YaO9sdVcAzB16tSsq6urdvz48dv781wkyeE3thkb7ezsrI3N5saUKVOyurq6+Ng4bty45wqHGSfc4GRF
        HfqfKGxzV2NjY1PhCCArfMxyJw4rCmWpnzhx4tqxY8e+MWrUqDgl6CVZHmODscUJEyasiW3m+uDfybS1
        tf33aCBobm6uKxQnjjOmkSyPscHY4snbnDVrVjZktLa2ZjNnziweYhTKkwEoH7HB2GJsMrYJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMCZx78BHoRoveGaXmYAAAAASUVORK5CYII=
</value>
  </data>
</root>